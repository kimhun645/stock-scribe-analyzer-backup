services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - stock-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=stocknrs
      - DB_USER=postgres
      - DB_PASSWORD=Login123
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3001
    depends_on:
      - postgres
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - stock-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=stocknrs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Login123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_setup.sql:/docker-entrypoint-initdb.d/init.sql
      - ./ssl:/var/lib/postgresql/ssl:ro  # Mount SSL certificates
    command: >
      postgres
      -c ssl=on
      -c ssl_cert_file=/var/lib/postgresql/ssl/server.crt
      -c ssl_key_file=/var/lib/postgresql/ssl/server.key
      -c ssl_ca_file=/var/lib/postgresql/ssl/ca.crt
    restart: unless-stopped
    networks:
      - stock-network

volumes:
  postgres_data:

networks:
  stock-network:
    driver: bridge
